import{aC as b,z as r,o as n,b as u,e as t,ab as o,x as c,aD as g,i as s,f as i}from"./modules/vue-CT7_GqGF.js";import{u as w}from"./slidev/context-DZTo5vcT.js";import{c as y,a as p}from"./layoutHelper-BN7rjZLy.js";import{_ as T}from"./index-QE498Oqk.js";const k={key:0,class:"slidev-layout default error"},$={key:1,class:"h-full"},q={key:0,class:"flex h-full w-full"},x={class:"column-content"},C={key:1,class:"flex h-full w-full"},S={class:"column-content"},I={__name:"side-title",props:{side:{default:"l"},color:{default:"light"},titlewidth:{default:"is-one-third"},align:{default:"auto"}},setup(h){b(l=>({c0839b92:f.value.l,c0839b86:f.value.r})),w();const d=h,v=r(()=>d.side==="left"||d.side==="l"?"left":d.side==="right"||d.side==="r"?"right":"error"),f=r(()=>y(d.titlewidth)),a=r(()=>{let l="";d.align=="auto"&&(d.side==="l"||d.side==="left")?l="rm-lt":d.align=="auto"&&(d.side==="r"||d.side==="right")?l="lt-lm":l=d.align;const e=l.split("-");return{l:p(e[0]),r:p(e[1])}}),m=r(()=>`neversink-${d.color}-scheme`);return(l,e)=>v.value=="error"||f.value=="error"?(n(),u("div",k,[e[10]||(e[10]=t("span",{class:"ns-c-warning"},[t("b",null,"Error"),o(": invalid layout params.")],-1)),e[11]||(e[11]=t("hr",null,null,-1)),t("p",null,[e[0]||(e[0]=o(" There are three parameters: ")),e[1]||(e[1]=t("code",null,"color",-1)),e[2]||(e[2]=o(", ")),e[3]||(e[3]=t("code",null,"columns",-1)),e[4]||(e[4]=o(" and ")),e[5]||(e[5]=t("code",null,"align",-1)),e[6]||(e[6]=o(". Currently: ")),t("code",null,"color: "+c(d.color),1),e[7]||(e[7]=o(", ")),t("code",null,"columns: "+c(d.titlewidth),1),e[8]||(e[8]=o(" and ")),t("code",null,"align: "+c(d.align),1),e[9]||(e[9]=o(". "))]),e[12]||(e[12]=g("<p data-v-2f8bd0d7>The &quot;slots&quot; of the page are default and <code data-v-2f8bd0d7>:: content ::</code></p><p data-v-2f8bd0d7> Options for <code data-v-2f8bd0d7>titlewidth</code> are divided into 12 column units. So with <code data-v-2f8bd0d7>titlewidth: is-1-11</code> the left column is 1/12 wide and the the right columns is 11/12 wide. The component admits a short had of only specifying the left column (<code data-v-2f8bd0d7>titlewidth: is-1</code> does the same thing). In addition there are short hands like <code data-v-2f8bd0d7>titlewidth: is-one-quarter</code> which resolves to <code data-v-2f8bd0d7>is-3-9</code>, etc... </p><p data-v-2f8bd0d7> Here are a bunch of examples: <code data-v-2f8bd0d7> is-1, is-2, is-3, is-3-9, is-4-8, is-5-7, is-one-quarter, is-one-third, is-one-half, is-two-thirds, is-three-quarters </code></p><p data-v-2f8bd0d7> The <code data-v-2f8bd0d7>align</code> parameter determines how the columns look. The notation is for example <code data-v-2f8bd0d7>align: cm-cm</code>. The first part for the left column, and the third part is for the right column. The first letter is (<code data-v-2f8bd0d7>c</code> for center, <code data-v-2f8bd0d7>l</code> for left, <code data-v-2f8bd0d7>r</code> for right). This applies to all three second. For the columns the second letter is vertical alignment (<code data-v-2f8bd0d7>t</code> for top, <code data-v-2f8bd0d7>m</code> for middle, <code data-v-2f8bd0d7>b</code> for bottom). </p><p data-v-2f8bd0d7>The <code data-v-2f8bd0d7>color</code> parameter determines color of the title.</p>",5))])):(n(),u("div",$,[v.value==="left"?(n(),u("div",q,[t("div",{class:s(["slidecolor column-title",m.value])},[t("div",{class:s(["slidev-layout sidetitle w-full p-6",a.value.l])},[i(l.$slots,"title",{},void 0,!0)],2)],2),t("div",x,[t("div",{class:s(["slidev-layout h-fit w-full",a.value.r])},[i(l.$slots,"content",{},void 0,!0),i(l.$slots,"default",{},void 0,!0)],2)])])):(n(),u("div",C,[t("div",S,[t("div",{class:s(["slidev-layout h-fit w-full",a.value.l])},[i(l.$slots,"content",{},void 0,!0),i(l.$slots,"default",{},void 0,!0)],2)]),t("div",{class:s(["slidecolor column-title",m.value])},[t("div",{class:s(["slidev-layout sidetitle w-full p-6",a.value.r])},[i(l.$slots,"title",{},void 0,!0)],2)],2)]))]))}},D=T(I,[["__scopeId","data-v-2f8bd0d7"]]);export{D as I};
